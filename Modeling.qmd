---
title: "Modeling"
format: html
editor: visual
---

## Basic R Modeling
```{r}
library(tidymodels)
library(tidyverse)
library(rpart)
library(baguette)
library(parsnip)
library(tidyr)
library(dplyr)
library(readr)
library(lubridate)
library(psych)
library(tidymodels)
library(stats)
library(rsample)
library(yardstick)
library(tidyverse)
library(corrr)
library(parsnip)
library(tune)
library(glmnet)
library(baguette)
library(ranger)
library(rpart.plot)

set.seed(1234)

split_data<-initial_split(data,prop=0.1,strata = Diabetes_binary)
train_data<-training(split_data)
test_data<-testing(split_data)
cv_fold_data<-vfold_cv(train_data,v=5,strata=Diabetes_binary)





rec1<-recipe(Diabetes_binary~ Sex+Smoker+AnyHealthcare+GenHlth+PhysActivity,data=train_data)|>
   step_dummy(Sex,Smoker,GenHlth,AnyHealthcare,PhysActivity)



rf_spec<-rand_forest(mtry=tune())|>
  set_engine("ranger")|>
  set_mode("classification")

rf_wkf<-workflow()|>
  add_recipe(rec1)|>
  add_model(rf_spec)

rf_fit<-rf_wkf|>
  tune_grid(resamples=cv_fold_data,
            grid=2,
            metrics=metric_set(mn_log_loss))

rf_fit|>
  collect_metrics()|>
  filter(.metric=="mn_log_loss")|>
  arrange(mean)


rf_best_params<-select_best(rf_fit,metric = "mn_log_loss")
rf_best_params


rf_final_wkf<-rf_wkf|>
  finalize_workflow(rf_best_params)

rf_final_fit<-rf_final_wkf|>
  last_fit(split_data,metrics=metric_set(mn_log_loss))

rf_final_fit|>collect_metrics()


```



## Classification Tree
```{r}
tree_mod<-decision_tree(tree_depth = tune(),
                        min_n = 5,
                        cost_complexity = tune()
                        )|>
  set_engine("rpart")|>
  set_mode("classification")

tree_wkf<-workflow()|>
  add_recipe(rec1)|>
  add_model(tree_mod)

temp<-tree_wkf|>
  tune_grid(resamples = cv_fold_data,metrics = metric_set(mn_log_loss))
  temp|>
    collect_metrics()

  
  
  tree_grid<-grid_regular(cost_complexity(),
                          tree_depth(),
                          levels=c(5,3))
  tree_fits<-tree_wkf|>
    tune_grid(resamples=cv_fold_data,metrics=metric_set(mn_log_loss),
              grid=tree_grid)
  
  tree_fits
  
  tree_fits|>
    collect_metrics()|>
    filter(.metric=="mn_log_loss")|>
    arrange(mean)

  
tree_best_params<-select_best(tree_fits, metric="mn_log_loss")
tree_best_params

tree_final_wkf<-tree_wkf|>
  finalize_workflow(tree_best_params)

tree_final_fit<-tree_final_wkf|>
  last_fit(split_data,metrics=metric_set(mn_log_loss))
tree_final_fit

tree_final_fit|>
  collect_metrics()

tree_final_model<-extract_workflow(tree_final_fit)
tree_final_model

tree_final_model %>%
  extract_fit_engine () %>%
  rpart.plot::rpart.plot(roundint=FALSE)



```


```{r}
best<-rf_wkf|>
  finalize_workflow(rf_best_params)|>
  fit(data)
best
```

